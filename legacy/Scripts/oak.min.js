var Parameter;!function(Parameter){Parameter[Parameter.immediate=0]="immediate",Parameter[Parameter.register=1]="register",Parameter[Parameter.condition=2]="condition",Parameter[Parameter.offset=3]="offset",Parameter[Parameter.special=4]="special"}(Parameter||(Parameter={}));var BitRange=function(field,start,bits,parameter,constant,limitlessBits){void 0===parameter&&(parameter=null),void 0===constant&&(constant=null),void 0===limitlessBits&&(limitlessBits=null),this.field=field,this.start=start,this.bits=bits,this.parameter=parameter,this.constant=constant,this.limitlessBits=limitlessBits},Format=function(){function Format(ranges,parameters,parameterTypes,regex,disassembly,processSpecialParameter,decodeSpecialParameter){void 0===processSpecialParameter&&(processSpecialParameter=null),void 0===decodeSpecialParameter&&(decodeSpecialParameter=null),this.parameters=parameters,this.ranges=ranges,this.parameterTypes=parameterTypes,this.regex=regex,this.disassembly=disassembly,this.processSpecialParameter=processSpecialParameter,this.decodeSpecialParameter=decodeSpecialParameter}return Format.prototype.disassemble=function(mnemonic,args,abiNames){var output=this.disassembly;output=output.replace("@mnem",mnemonic);for(var i=0;i<this.parameters.length;i++){if(null==args[i]||-1===output.search("@arg")){console.log("Disassembler note: Argument mismatch.");break}output=output.replace("@arg",this.parameterTypes[i]===Parameter.register?abiNames[args[i]]:args[i].toString())}return output},Format.prototype.parameterBitRangeIndex=function(parameter){for(var i=0;i<this.ranges.length;i++){if(this.ranges[i].field===parameter)return i;var limits=/([A-za-z]+)\s*\[\s*(\d+)\s*:\s*(\d+)\s*\]/.exec(this.ranges[i].field);if(null!==limits&&limits[1]===parameter)return i}return null},Format.prototype.fieldParameterIndex=function(range){for(var i=0;i<this.parameters.length;i++)if(this.parameters[i]==range)return i;return null},Format}(),Instruction=function(){function Instruction(mnemonic,format,constants,constValues,executor,signed,available){void 0===signed&&(signed=!0),void 0===available&&(available=!0),this.mnemonic=mnemonic,this.format=format,this.constants=constants,this.constValues=constValues,this.available=available,this.signed=signed,this.executor=executor}return Instruction.prototype.pad=function(str,length){for(var padded=str,i=0;i<length-str.length;i++)padded="0"+padded;return padded},Instruction.prototype.mask=function(){for(var str="",i=0;i<this.format.ranges.length;i++){var index=this.constants.indexOf(this.format.ranges[i].field);if(-1!==index)str+=this.pad(this.constValues[index].toString(2),this.format.ranges[i].bits);else if(null!=this.format.ranges[i].constant)str+=this.pad(this.format.ranges[i].constant.toString(2),this.format.ranges[i].bits);else for(var j=0;j<this.format.ranges[i].bits;j++)str+="X"}return str},Instruction.prototype.match=function(machineCode){for(var machineCodeMutable=machineCode>>>0,maskBits=this.mask().split(""),i=31;0<=i;i--)if("X"!==maskBits[i]){if(parseInt(maskBits[i])!==(1&machineCodeMutable))return!1;machineCodeMutable>>>=1}else machineCodeMutable>>>=1;return!0},Instruction.prototype.template=function(){for(var i=0;i<this.format.ranges.length;i++)this.constants.indexOf(this.format.ranges[i].field);return parseInt(this.mask().split("X").join("0"),2)},Instruction}(),PseudoInstruction=function(){function PseudoInstruction(mnemonic,parameters,expansion){this.mnemonic=mnemonic,this.parameters=parameters,this.expansion=expansion}return PseudoInstruction.prototype.expand=function(line){return null},PseudoInstruction}(),InstructionSet=function(){function InstructionSet(name,bits,formats,instructions,pseudoInstructions,dataDirectives,dataDirectiveSizes,abiNames,process,tokenize,assemble){this.name=name,this.bits=bits,this.formats=formats,this.instructions=instructions,this.pseudoInstructions=pseudoInstructions,this.dataDirectives=dataDirectives,this.dataDirectiveSizes=dataDirectiveSizes,this.abiNames=abiNames,this.processParameter=process,this.tokenize=tokenize,this.assemble=assemble}return InstructionSet.prototype.pseudoMnemonicSearch=function(mnemonic){for(var i=0;i<this.pseudoInstructions.length;i++)if(this.pseudoInstructions[i].mnemonic==mnemonic)return i;return-1},InstructionSet.prototype.mnemonicSearch=function(mnemonic){for(var i=0;i<this.instructions.length;i++)if(this.instructions[i].mnemonic==mnemonic)return i;return-1},InstructionSet}();function Oak_gen_MIPS(){var formats=[],instructions=[];formats.push(new Format([new BitRange("opcode",26,6),new BitRange("rs",21,5,1),new BitRange("rt",16,5,2),new BitRange("rd",11,5,0),new BitRange("shamt",6,5,null,0),new BitRange("funct",0,6)],["rd","rt","rs"],[Parameter.register,Parameter.register,Parameter.register],/[a-zA-Z]+\s*(\$[A-Za-z0-9]+)\s*,\s*(\$[A-Za-z0-9]+)\s*,\s*(\$[A-Za-z0-9]+)/,"@mnem @arg, @arg, @arg"));var rType=formats[formats.length-1];instructions.push(new Instruction("ADD",rType,["opcode","funct"],[0,32],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])+core.registerFile.read(core.arguments[2])),null})),instructions.push(new Instruction("ADDU",rType,["opcode","funct"],[0,33],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])+core.registerFile.read(core.arguments[2])),null})),instructions.push(new Instruction("SUB",rType,["opcode","funct"],[0,34],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])-core.registerFile.read(core.arguments[2])),null})),instructions.push(new Instruction("SUBU",rType,["opcode","funct"],[0,35],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])-core.registerFile.read(core.arguments[2])),null})),instructions.push(new Instruction("AND",rType,["opcode","funct"],[0,36],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])&core.registerFile.read(core.arguments[2])),null})),instructions.push(new Instruction("OR",rType,["opcode","funct"],[0,37],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])|core.registerFile.read(core.arguments[2])),null})),instructions.push(new Instruction("NOR",rType,["opcode","funct"],[0,39],function(core){return core.registerFile.write(core.arguments[0],~(core.registerFile.read(core.arguments[1])|core.registerFile.read(core.arguments[2]))),null})),instructions.push(new Instruction("XOR",rType,["opcode","funct"],[0,38],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])^core.registerFile.read(core.arguments[2])),null})),instructions.push(new Instruction("SLT",rType,["opcode","funct"],[0,42],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])<core.registerFile.read(core.arguments[2])?1:0),null})),instructions.push(new Instruction("SLLV",rType,["opcode","funct"],[0,4],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])<<core.registerFile.read(core.arguments[2])),null})),instructions.push(new Instruction("SRLV",rType,["opcode","funct"],[0,6],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])>>>core.registerFile.read(core.arguments[2])),null})),instructions.push(new Instruction("SRAV",rType,["opcode","funct"],[0,7],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])>>core.registerFile.read(core.arguments[2])),null})),formats.push(new Format([new BitRange("opcode",26,6),new BitRange("rs",21,5,0),new BitRange("rt",16,5,null,0),new BitRange("rd",11,5,null,0),new BitRange("shamt",6,5,null,0),new BitRange("funct",0,6)],["rs"],[Parameter.register],/[a-zA-Z]+\s*(\$[A-Za-z0-9]+)/,"@mnem @arg"));var rjSubtype=formats[formats.length-1];instructions.push(new Instruction("JR",rjSubtype,["opcode","funct"],[0,8],function(core){return core.pc=core.registerFile.read(core.arguments[0]),null})),formats.push(new Format([new BitRange("opcode",26,6),new BitRange("rs",21,5,null,0),new BitRange("rt",16,5,1),new BitRange("rd",11,5,0),new BitRange("shamt",6,5,2),new BitRange("funct",0,6)],["rd","rt","shamt"],[Parameter.register,Parameter.register,Parameter.immediate],/[a-zA-Z]+\s*(\$[A-Za-z0-9]+)\s*,\s*(\$[A-Za-z0-9]+)\s*,\s*([0-9]+)/,"@mnem @arg, @arg, @arg"));var rsSubtype=formats[formats.length-1];instructions.push(new Instruction("SLL",rsSubtype,["opcode","funct"],[0,0],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])<<core.arguments[2]),null})),instructions.push(new Instruction("SRL",rsSubtype,["opcode","funct"],[0,2],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])>>>core.arguments[2]),null})),instructions.push(new Instruction("SRA",rsSubtype,["opcode","funct"],[0,2],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])>>core.arguments[2]),null})),formats.push(new Format([new BitRange("funct",0,32)],[],[],/[a-zA-Z]+/,"@mnem"));var rcSubtype=formats[formats.length-1];instructions.push(new Instruction("SYSCALL",rcSubtype,["funct"],[12],function(core){return core.ecall(),null})),formats.push(new Format([new BitRange("opcode",26,6),new BitRange("rs",21,5,1),new BitRange("rt",16,5,0),new BitRange("imm",0,16,2)],["rt","rs","imm"],[Parameter.register,Parameter.register,Parameter.immediate],/[a-zA-Z]+\s*(\$[A-Za-z0-9]+)\s*,\s*(\$[A-Za-z0-9]+)\s*,\s*(-?[a-zA-Z0-9_]+)/,"@mnem @arg, @arg, @arg"));var iType=formats[formats.length-1];instructions.push(new Instruction("ADDI",iType,["opcode"],[8],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])+core.arguments[2]),null})),instructions.push(new Instruction("ADDIU",iType,["opcode"],[9],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])+core.arguments[2]),null})),instructions.push(new Instruction("SLTI",iType,["opcode"],[10],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])<core.arguments[2]?1:0),null})),instructions.push(new Instruction("SLTIU",iType,["opcode"],[11],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])<core.arguments[2]?1:0),null})),instructions.push(new Instruction("ANDI",iType,["opcode"],[12],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])>>>0&core.arguments[2]),null})),instructions.push(new Instruction("ORI",iType,["opcode"],[13],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])>>>0|core.arguments[2]),null})),instructions.push(new Instruction("XORI",iType,["opcode"],[14],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])>>>0^core.arguments[2]),null})),formats.push(new Format([new BitRange("opcode",26,6),new BitRange("rs",21,5,0),new BitRange("rt",16,5,1),new BitRange("imm",0,16,2)],["rt","rs","imm"],[Parameter.register,Parameter.register,Parameter.special],/[a-zA-Z]+\s*(\$[A-Za-z0-9]+)\s*,\s*(\$[A-Za-z0-9]+)\s*,\s*(-?[a-zA-Z0-9_]+)/,"@mnem @arg, @arg, @arg",function(address,text,bits,labels,addresses){var array=text.split(""),result={errorMessage:null,value:null},int=NaN,labelLocation=labels.indexOf(text);if(-1!==labelLocation)int=addresses[labelLocation];else{var radix=10,splice=!1;"0"===array[0]&&("b"==array[1]&&(radix=2,splice=!0),"o"==array[1]&&(radix=8,splice=!0),"d"==array[1]&&(radix=10,splice=!0),"x"==array[1]&&(radix=16,splice=!0));var interpretable=text;splice&&(interpretable=array.splice(2,array.length-2).join("")),int=parseInt(interpretable,radix)}return isNaN(int)?(result.errorMessage="Offset '"+text+"' is not a recognized label or literal.",result):0!=(3&int)?(result.errorMessage="Branches must be word-aligned.",result):(int-=address,rangeCheck(int>>=2,16)?result.value=int:result.errorMessage="The value of '"+text+"' is out of range.",result)},function(value,address){return value<<2}));var ibSubtype=formats[formats.length-1];instructions.push(new Instruction("BEQ",ibSubtype,["opcode"],[4],function(core){return core.registerFile.read(core.arguments[0])===core.registerFile.read(core.arguments[1])&&(core.pc+=core.arguments[2]),null})),instructions.push(new Instruction("BNE",ibSubtype,["opcode"],[5],function(core){return core.registerFile.read(core.arguments[0])!==core.registerFile.read(core.arguments[1])&&(core.pc+=core.arguments[2]),null})),formats.push(new Format([new BitRange("opcode",26,6),new BitRange("rs",21,5,null,0),new BitRange("rt",16,5,0),new BitRange("imm",0,16,1)],["rt","imm"],[Parameter.register,Parameter.immediate],/[a-zA-Z]+\s*(\$[A-Za-z0-9]+)\s*,\s*(-?[a-zA-Z0-9_]+)/,"@mnem @arg, @arg"));var iluiSubtype=formats[formats.length-1];instructions.push(new Instruction("LUI",iluiSubtype,["opcode"],[15],function(core){return core.registerFile.write(core.arguments[0],core.arguments[1]<<16),null})),formats.push(new Format([new BitRange("opcode",26,6),new BitRange("rs",21,5,2),new BitRange("rt",16,5,0),new BitRange("imm",0,16,1)],["rt","imm","rs"],[Parameter.register,Parameter.immediate,Parameter.register],/[a-zA-Z]+\s*(\$[A-Za-z0-9]+)\s*,\s*(-?0?[boxd]?[0-9A-F]+)\(\s*(\$[A-Za-z0-9]+)\s*\)/,"@mnem @arg, @arg(@arg)"));var ilsSubtype=formats[formats.length-1];instructions.push(new Instruction("LB",ilsSubtype,["opcode"],[32],function(core){var bytes=core.memcpy(core.registerFile.read(core.arguments[2])+core.arguments[1],1);return null===bytes?"Illegal memory access.":(core.registerFile.write(core.arguments[0],signExt(bytes[0],8)),null)})),instructions.push(new Instruction("LH",ilsSubtype,["opcode"],[33],function(core){var bytes=core.memcpy(core.registerFile.read(core.arguments[2])+core.arguments[1],2);return null===bytes?"Illegal memory access.":(core.registerFile.write(core.arguments[0],signExt(catBytes(bytes),16)),null)})),instructions.push(new Instruction("LW",ilsSubtype,["opcode"],[35],function(core){var bytes=core.memcpy(core.registerFile.read(core.arguments[2])+core.arguments[1],4);return null===bytes?"Illegal memory access.":(core.registerFile.write(core.arguments[0],catBytes(bytes)),null)})),instructions.push(new Instruction("LBU",ilsSubtype,["opcode"],[36],function(core){var bytes=core.memcpy(core.registerFile.read(core.arguments[2])+core.arguments[1],1);return null===bytes?"Illegal memory access.":(core.registerFile.write(core.arguments[0],bytes[0]),null)})),instructions.push(new Instruction("LHU",ilsSubtype,["opcode"],[37],function(core){var bytes=core.memcpy(core.registerFile.read(core.arguments[2])+core.arguments[1],2);return null===bytes?"Illegal memory access.":(core.registerFile.write(core.arguments[0],catBytes(bytes)),null)})),instructions.push(new Instruction("SB",ilsSubtype,["opcode"],[40],function(core){var bytes=[];return bytes.push(255&core.registerFile.read(core.arguments[0])),core.memset(core.registerFile.read(core.arguments[2])+core.arguments[1],bytes)?null:"Illegal memory access."})),instructions.push(new Instruction("SH",ilsSubtype,["opcode"],[41],function(core){var bytes=[],value=core.registerFile.read(core.arguments[0]);return bytes.push(255&value),value>>>=8,bytes.push(255&value),core.memset(core.registerFile.read(core.arguments[2])+core.arguments[1],bytes)?null:"Illegal memory access."})),instructions.push(new Instruction("SW",ilsSubtype,["opcode"],[43],function(core){var bytes=[],value=core.registerFile.read(core.arguments[0]);return bytes.push(255&value),value>>>=8,bytes.push(255&value),value>>>=8,bytes.push(255&value),value>>>=8,bytes.push(255&value),core.memset(core.registerFile.read(core.arguments[2])+core.arguments[1],bytes)?null:"Illegal memory access."})),formats.push(new Format([new BitRange("opcode",26,6),new BitRange("imm",0,26,0,null,32)],["imm"],[Parameter.special],/[A-z]+\s*([A-Za-z0-9_]+)/,"@mnem @arg",function(address,text,bits,labels,addresses){var array=text.split(""),result={errorMessage:null,value:null},int=NaN,labelLocation=labels.indexOf(text);if(-1!==labelLocation)int=addresses[labelLocation];else{var radix=10,splice=!1;"0"===array[0]&&("b"==array[1]&&(radix=2,splice=!0),"o"==array[1]&&(radix=8,splice=!0),"d"==array[1]&&(radix=10,splice=!0),"x"==array[1]&&(radix=16,splice=!0));var interpretable=text;splice&&(interpretable=array.splice(2,array.length-2).join("")),int=parseInt(interpretable,radix)}return isNaN(int)?result.errorMessage="Offset '"+text+"' is not a recognized label or literal.":int>>>28==address>>>28?0==(3&int)?result.value=(268435452&int)>>>2:result.errorMessage="Jumps must be word-aligned.":result.errorMessage="The value of '"+text+"' is out of range.",result},function(value,address){return value<<2|4026531840&address}));var jType=formats[formats.length-1];instructions.push(new Instruction("J",jType,["opcode"],[2],function(core){return core.pc=core.arguments[0],null})),instructions.push(new Instruction("JAL",jType,["opcode"],[3],function(core){return core.registerFile.write(31,core.pc),core.pc=core.arguments[0],null})),formats.push(new Format([new BitRange("opcode",26,6),new BitRange("rs",21,5,1),new BitRange("rt",16,5,null,0),new BitRange("rd",11,5,0),new BitRange("shamt",6,5,null,0),new BitRange("funct",0,6)],["rd","rs"],[Parameter.register,Parameter.register],/[a-zA-Z]+\s*(\$[A-Za-z0-9]+)\s*,\s*(\$[A-Za-z0-9]+)/,"@mnem @arg, @arg"));var mvPseudo=formats[formats.length-1];instructions.push(new Instruction("MV",mvPseudo,["opcode","funct"],[0,32],function(core){return null})),formats.push(new Format([new BitRange("opcode",26,6),new BitRange("rs",21,5,null,0),new BitRange("rt",16,5,0),new BitRange("imm",0,16,1)],["rt","imm"],[Parameter.register,Parameter.immediate],/[a-zA-Z]+\s*(\$[A-Za-z0-9]+)\s*,\s*(-?[a-zA-Z0-9_]+)/,"@mnem @arg, @arg"));var liPseudo=formats[formats.length-1];instructions.push(new Instruction("LI",liPseudo,["opcode"],[8],function(core){return null})),instructions.push(new Instruction("LA",liPseudo,["opcode"],[8],function(core){return null}));return new InstructionSet("mips",32,formats,instructions,[],[".word",".half",".byte",".asciiz"],[4,2,1,0],["$zero","$at","$v0","$v1","$a0","$a1","$a2","$a3","$t0","$t1","$t2","$t3","$t4","$t5","$t6","$t7","$s0","$s1","$s2","$s3","$s4","$s5","$s6","$s7","$t8","$t9","$k0","$k1","$gp","$sp","$fp","$ra"],function(address,text,type,bits,labels,addresses){var array=text.split(""),result={errorMessage:null,value:null};switch(type){case Parameter.register:var registerNo,index=this.abiNames.indexOf(text);return-1!==index?result.value=index:"$"!==array[0]?result.errorMessage="Register "+text+" does not exist.":0<=(registerNo=parseInt(array.splice(1,array.length-1).join("")))&&registerNo<=31?result.value=registerNo:result.errorMessage="Register "+text+" does not exist.",result;case Parameter.immediate:var int=NaN,labelIndex=labels.indexOf(text);if(-1!==labelIndex)int=addresses[labelIndex];else if(3===array.length&&"'"==array[0]&&"'"==array[2])int=array[1].charCodeAt(0);else{var radix=10,splice=!1;"0"===array[0]&&("b"==array[1]&&(radix=2,splice=!0),"o"==array[1]&&(radix=8,splice=!0),"d"==array[1]&&(radix=10,splice=!0),"x"==array[1]&&(radix=16,splice=!0));var interpretable=text;splice&&(interpretable=array.splice(2,array.length-2).join("")),int=parseInt(interpretable,radix)}return isNaN(int)?result.errorMessage="Immediate '"+text+"' is not a recognized label, literal or character.":rangeCheck(int,bits)?result.value=int:result.errorMessage="The value of '"+text+"' is out of range.",result;case Parameter.offset:int=NaN;var labelLocation=labels.indexOf(text);return-1!==labelLocation?int=addresses[labelLocation]-address:(splice=!(radix=10),"0"===array[0]&&("b"==array[1]&&(radix=2,splice=!0),"o"==array[1]&&(radix=8,splice=!0),"d"==array[1]&&(radix=10,splice=!0),"x"==array[1]&&(radix=16,splice=!0)),interpretable=text,splice&&(interpretable=array.splice(2,array.length-2).join("")),int=parseInt(interpretable,radix)),isNaN(int)?result.errorMessage="Offset '"+text+"' is not a recognized label or literal.":rangeCheck(int,bits)?result.value=int:result.errorMessage="The value of '"+text+"' is out of range.",result;default:return result}},function(file){for(var result={errorMessage:null,labels:[],addresses:[],lines:[],pc:[]},address=0,text=!0,lines=file.split("\n"),i=0;i<lines.length;i++){var labelExtractor=/\s*(([A-Za-z_][A-Za-z0-9_]*):)?(.*)?/.exec(lines[i]);if(null==labelExtractor&&console.log("Congratulations, you broke regular expressions."),void 0!==labelExtractor[2]&&(result.labels.push(labelExtractor[2]),result.addresses.push(address)),lines[i]=labelExtractor[3],null!=lines[i]){for(var chars=lines[i].split(""),inString=!1,commentOut=!1,j=0;j<chars.length;j++)if(commentOut)"\n"!==chars[j]?(chars.splice(j,1),j--):commentOut=!1;else if('"'==chars[j]||"'"==chars[j])inString=!inString;else if(inString){if("\\"==chars[j])j++;else if("\n"==chars[j])return result.errorMessage="Line "+i+": Unterminated string.",result}else"#"==chars[j]&&(commentOut=!0,chars.splice(j,1),j--);lines[i]=chars.join(""),lines[i]=lines[i].split("' '").join("32");var directives=lines[i].split(/\s+/).filter(function(value){return 0<value.length});if(0!==directives.length){var directiveChars=directives[0].split("");if(text)if(".data"===directives[0]){if(text=!1,void 0!==directives[1])return result.errorMessage="Line "+i+": "+directives[1]+" is extraneous. .data does not take any arguments.",result}else if(".text"===directives[0]);else{if("."===directiveChars[0])return result.errorMessage="Line "+i+": "+directives[0]+" cannot be in the text section. Aborting.",result;if(address+=4,-1===this.mnemonicSearch(directives[0].toUpperCase()))return result.errorMessage="Line "+i+": Instruction "+directives[0]+" not found.",result}else if(".text"==directives[0]){if(text=!0,void 0!==directives[1])return result.errorMessage="Line "+i+": "+directives[1]+" is extraneous. .text does not take any arguments.",result}else if(".data"===directives[0]);else{if(-1===this.dataDirectives.indexOf(directives[0]))return"."===directiveChars[0]?result.errorMessage="Line "+i+": Unsupported directive "+directives[0]+".":result.errorMessage="Line "+i+": Unrecognized keyword "+directives[0]+".",result;var index=this.dataDirectives.indexOf(directives[0]);if(0!==this.dataDirectiveSizes[index])address+=(array=directives.join(" ").split(directives[i]).join("").split(",")).length*this.dataDirectiveSizes[index];else switch(directives[0]){case".asciiz":case".ascii":var match=/.([A-Za-z]+?)\s*\"(.*)\"\s*(#.*)?$/.exec(lines[i]);if(null==match)return result.errorMessage="Line "+i+": Malformed string directive.",result;var array=match[1].split("");for(j=0;j<array.length;j++)"\\"==array[j]&&j++,address+=1;".asciiz"==directives[0]&&(address+=1)}}result.pc.push(address)}}}return result.lines=lines,result},function(nester,address,lines,labels,addresses){void 0===nester&&(nester=null);for(var result={errorMessage:null,machineCode:[],size:0},text=!0,i=0;i<lines.length;i++)if(void 0!==lines[i]){var directives=lines[i].split(/\s+/).filter(function(value){return 0<value.length});if(0!==directives.length)if(text)if(".data"===directives[0])text=!1;else if(".text"===directives[0]);else{address+=4;var instructionIndex=this.mnemonicSearch(directives[0].toUpperCase());if(-1===instructionIndex)return result.errorMessage="Line "+(null==nester?"":nester+":")+i+": Instruction "+directives[0]+" not found.",result;var instruction=this.instructions[instructionIndex],format=instruction.format,bitRanges=format.ranges,regex=format.regex,params=format.parameters,paramTypes=format.parameterTypes,machineCode=instruction.template(),match=regex.exec(lines[i]);if(null==match)return result.errorMessage="Line "+(null==nester?"":nester+":")+i+": Argument format for "+directives[0]+" violated.",result;for(var args=match.splice(1,params.length),j=0;j<bitRanges.length;j++)if(null!=bitRanges[j].parameter){var startBit=0,bits=bitRanges[j].bits,field=bitRanges[j].field,limits=/([A-za-z]+)\s*\[\s*(\d+)\s*:\s*(\d+)\s*\]/.exec(bitRanges[j].field);null!=limits&&(field=limits[1],bits=bitRanges[j].limitlessBits);var register=0;if(paramTypes[index=format.fieldParameterIndex(field)]!==Parameter.special){var processed_1=this.processParameter(address,args[bitRanges[j].parameter],paramTypes[index],bits,labels,addresses);if(null!==processed_1.errorMessage)return result.errorMessage="Line "+(null==nester?"":nester+":")+i+": "+processed_1.errorMessage,result;register=processed_1.value}else{var processed_2=instruction.format.processSpecialParameter(address,args[index],bits,labels,addresses);if(null!==processed_2.errorMessage)return result.errorMessage="Line "+(null==nester?"":nester+":")+i+": "+processed_2.errorMessage,result;register=processed_2.value}null!=limits&&(register>>>=startBit=parseInt(limits[3]),register&=(1<<parseInt(limits[2])-startBit+1)-1),machineCode|=(register&(1<<bitRanges[j].bits)-1)<<bitRanges[j].start}for(j=0;j<4;j++)result.machineCode.push(255&machineCode),machineCode>>>=8}else if(".text"==directives[0])text=!0;else if(-1!==this.dataDirectives.indexOf(directives[0])){var index=this.dataDirectives.indexOf(directives[0]);if(0!==this.dataDirectiveSizes[index]){var size=this.dataDirectiveSizes[index],array=lines[i].split("' '").join("'$OAK_SPACE_TEMP'").split(directives[0]).join("").split(" ").join("").split("'$OAK_SPACE_TEMP'").join("' '").split(",");for(j=0;j<array.length;j++){var processed=this.processParameter(address,array[j],Parameter.immediate,8*size,labels,addresses);if(null!==processed.errorMessage)return result.errorMessage="Line "+(null==nester?"":nester+":")+i+": "+processed.errorMessage,result;for(var k=0;k<size;k++)address+=1,result.machineCode.push(255&processed.value),processed.value=processed.value>>>8}}else switch(directives[0]){case".asciiz":case".ascii":var stringMatch=/\s*(\.asciiz?)\s*\"(.*)\"\s*(#.*)?$/.exec(lines[i]);if(null==stringMatch)return result.errorMessage="Line "+i+": Malformed string directive.",result;null==stringMatch[2]&&(stringMatch[2]="");var characters=stringMatch[2].split("");for(j=0;j<characters.length;j++){if("\\"==characters[j]){if(++j+1<characters.length)switch(characters[j+1]){case"n":result.machineCode.push(10);break;case"0":result.machineCode.push(0);break;case"'":result.machineCode.push(39);break;case"\\":result.machineCode.push(92);break;default:result.machineCode.push(characters[j].charCodeAt(0))}}else result.machineCode.push(characters[j].charCodeAt(0));address+=1}".asciiz"==stringMatch[1]&&(result.machineCode.push(0),address+=1)}}}return result.size=address,result})}var MIPS=Oak_gen_MIPS(),MIPSRegisterFile=function(){function MIPSRegisterFile(memorySize,abiNames){this.physicalFile=[],this.modifiedRegisters=[];for(var i=0;i<32;i++)this.physicalFile.push(0),this.modifiedRegisters.push(!1);this.memorySize=memorySize,this.physicalFile[29]=memorySize,this.abiNames=abiNames}return MIPSRegisterFile.prototype.print=function(){console.log("Registers\n------");for(var i=0;i<32;i++)console.log("$"+i.toString(),this.abiNames[i],this.physicalFile[i].toString(),(this.physicalFile[i]>>>0).toString(16).toUpperCase());console.log("------")},MIPSRegisterFile.prototype.read=function(registerNumber){return 0===registerNumber?0:this.physicalFile[registerNumber]},MIPSRegisterFile.prototype.write=function(registerNumber,value){this.physicalFile[registerNumber]=value,this.modifiedRegisters[registerNumber]=!0},MIPSRegisterFile.prototype.getRegisterCount=function(){return 32},MIPSRegisterFile.prototype.getModifiedRegisters=function(){for(var modReg=this.modifiedRegisters.slice(),i=0;i<this.getRegisterCount();i++)this.modifiedRegisters[i]=!1;return modReg},MIPSRegisterFile.prototype.reset=function(){for(var i=0;i<32;i++)this.physicalFile[i]=0,this.modifiedRegisters[i]=!1;this.physicalFile[29]=this.memorySize},MIPSRegisterFile}(),MIPSCore=function(){function MIPSCore(memorySize,ecall,instructionCallback){this.defaultEcallRegType=2,this.defaultEcallRegArg=4,this.aceStyle="ace/mode/mips",this.defaultCode='    la $a0, str\n    li $v0, 4 #4 is the string print service number...\n    syscall\n    li $v0, 10 #...and 10 is the program termination service number!\n    syscall\n.data\nstr:    .asciiz "Hello, World!"',this.defaultMachineCode="14 00 04 20 04 00 02 20 0C 00 00 00 0A 00 02 20 0C 00 00 00 48 65 6C 6C 6F 2C 20 57 6F 72 6C 64 21 00 ",this.instructionSet=MIPS,this.pc=0,this.memorySize=memorySize,this.ecall=ecall,this.instructionCallback=instructionCallback,this.registerFile=new MIPSRegisterFile(memorySize,MIPS.abiNames),this.memory=new Array(memorySize);for(var i=0;i<memorySize;i++)this.memory[i]=0}return MIPSCore.prototype.reset=function(){this.pc=0,this.memory=[];for(var i=0;i<this.memorySize;i++)this.memory[i]=0;this.registerFile.reset()},MIPSCore.prototype.memcpy=function(address,bytes){if(address+bytes>this.memorySize)return null;for(var result=[],i=0;i<bytes;i++)result.push(this.memory[address+i]);return result},MIPSCore.prototype.memset=function(address,bytes){if(address<0)return!1;if(address+bytes.length>this.memorySize)return!1;for(var i=0;i<bytes.length;i++)this.memory[address+i]=bytes[i];return!0},MIPSCore.prototype.fetch=function(){if(this.pc<0)return"Fetch Error: Negative program counter.";var arr=this.memcpy(this.pc,4);return null==arr?"Fetch Error: Illegal memory access.":(this.pc+=4,this.fetched=catBytes(arr),null)},MIPSCore.prototype.decode=function(){var insts=this.instructionSet.instructions;this.decoded=null,this.arguments=[];for(var i=0;i<insts.length;i++)if(insts[i].match(this.fetched)){this.decoded=insts[i];break}if(null==this.decoded)return null;var format=this.decoded.format,bitRanges=format.ranges,params=format.parameters,paramTypes=format.parameterTypes;for(i=0;i<bitRanges.length;i++)if(null!=bitRanges[i].parameter){var limit=0,field=bitRanges[i].field,limits=/([A-za-z]+)\s*\[\s*(\d+)\s*:\s*(\d+)\s*\]/.exec(bitRanges[i].field);null!=limits&&(field=limits[1],limit=parseInt(limits[3])>>>0);var index=format.fieldParameterIndex(field),bits=bitRanges[i].bits,value=(this.fetched>>>bitRanges[i].start&(1<<bitRanges[i].bits)-1)<<limit;paramTypes[index]===Parameter.special&&(value=this.decoded.format.decodeSpecialParameter(value,this.pc)),this.arguments[bitRanges[i].parameter]=this.arguments[bitRanges[i].parameter]|value}for(i=0;i<params.length;i++){var rangeIndex=format.parameterBitRangeIndex(params[i]);-1===rangeIndex&&console.log("Internal error: No field found for parameter "+params[i]+".");bits=bitRanges[rangeIndex].bits;null!=bitRanges[rangeIndex].limitlessBits&&(bits=bitRanges[rangeIndex].limitlessBits),this.decoded.signed&&paramTypes[i]!=Parameter.register&&(this.arguments[i]=signExt(this.arguments[i],bits))}return format.disassemble(this.decoded.mnemonic,this.arguments,this.instructionSet.abiNames)},MIPSCore.prototype.execute=function(){return this.decoded.executor(this)},MIPSCore}();function Oak_gen_RISCV(){var formats=[],instructions=[];formats.push(new Format([new BitRange("funct7",25,7),new BitRange("rs2",20,5,2),new BitRange("rs1",15,5,1),new BitRange("funct3",12,3),new BitRange("rd",7,5,0),new BitRange("opcode",0,7)],["rd","rs1","rs2"],[Parameter.register,Parameter.register,Parameter.register],/[a-zA-Z]+\s*([A-Za-z0-9]+)\s*,\s*([A-Za-z0-9]+)\s*,\s*([A-Za-z0-9]+)/,"@mnem @arg, @arg, @arg"));var rType=formats[formats.length-1];instructions.push(new Instruction("ADD",rType,["opcode","funct3","funct7"],[parseInt("0110011",2),parseInt("000",2),parseInt("0000000",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])+core.registerFile.read(core.arguments[2])),null})),instructions.push(new Instruction("SUB",rType,["opcode","funct3","funct7"],[parseInt("0110011",2),parseInt("000",2),parseInt("0100000",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])-core.registerFile.read(core.arguments[2])),null})),instructions.push(new Instruction("SLL",rType,["opcode","funct3","funct7"],[parseInt("0110011",2),parseInt("001",2),parseInt("0000000",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])<<core.registerFile.read(core.arguments[2])),null})),instructions.push(new Instruction("SLT",rType,["opcode","funct3","funct7"],[parseInt("0110011",2),parseInt("010",2),parseInt("0000000",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])<core.registerFile.read(core.arguments[2])?1:0),null})),instructions.push(new Instruction("SLTU",rType,["opcode","funct3","funct7"],[parseInt("0110011",2),parseInt("011",2),parseInt("0000000",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])<core.registerFile.read(core.arguments[2])?1:0),null},!1)),instructions.push(new Instruction("XOR",rType,["opcode","funct3","funct7"],[parseInt("0110011",2),parseInt("100",2),parseInt("0000000",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])^core.registerFile.read(core.arguments[2])),null})),instructions.push(new Instruction("SRL",rType,["opcode","funct3","funct7"],[parseInt("0110011",2),parseInt("101",2),parseInt("0000000",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])>>>core.registerFile.read(core.arguments[2])),null})),instructions.push(new Instruction("SRA",rType,["opcode","funct3","funct7"],[parseInt("0110011",2),parseInt("101",2),parseInt("0100000",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])>>core.registerFile.read(core.arguments[2])),null})),instructions.push(new Instruction("OR",rType,["opcode","funct3","funct7"],[parseInt("0110011",2),parseInt("110",2),parseInt("0000000",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])|core.registerFile.read(core.arguments[2])),null})),instructions.push(new Instruction("AND",rType,["opcode","funct3","funct7"],[parseInt("0110011",2),parseInt("111",2),parseInt("0000000",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])&core.registerFile.read(core.arguments[2])),null})),formats.push(new Format([new BitRange("imm",20,12,2),new BitRange("rs1",15,5,1),new BitRange("funct3",12,3),new BitRange("rd",7,5,0),new BitRange("opcode",0,7)],["rd","rs1","imm"],[Parameter.register,Parameter.register,Parameter.immediate],/[a-zA-Z]+\s*([A-Za-z0-9]+)\s*,\s*([A-Za-z0-9]+),\s*(-?[a-zA-Z0-9_]+)/,"@mnem @arg, @arg, @arg"));var iType=formats[formats.length-1];instructions.push(new Instruction("JALR",iType,["opcode","funct3"],[parseInt("1100111",2),parseInt("000",2)],function(core){return core.registerFile.write(core.arguments[0],core.pc),core.pc=core.registerFile.read(core.arguments[1])+signExt(core.arguments[2],12),null})),instructions.push(new Instruction("ADDI",iType,["opcode","funct3"],[parseInt("0010011",2),parseInt("000",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])+core.arguments[2]),null})),instructions.push(new Instruction("SLTI",iType,["opcode","funct3"],[parseInt("0010011",2),parseInt("010",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])<core.arguments[2]?1:0),null})),instructions.push(new Instruction("SLTIU",iType,["opcode","funct3"],[parseInt("0010011",2),parseInt("011",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])>>>0<core.arguments[2]>>>0?1:0),null},!1)),instructions.push(new Instruction("XORI",iType,["opcode","funct3"],[parseInt("0010011",2),parseInt("100",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])>>>0^core.arguments[2]),null})),instructions.push(new Instruction("ORI",iType,["opcode","funct3"],[parseInt("0010011",2),parseInt("110",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])>>>0|core.arguments[2]),null})),instructions.push(new Instruction("ANDI",iType,["opcode","funct3"],[parseInt("0010011",2),parseInt("111",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])>>>0&core.arguments[2]),null})),formats.push(new Format([new BitRange("imm",20,12,1),new BitRange("rs1",15,5,2),new BitRange("funct3",12,3),new BitRange("rd",7,5,0),new BitRange("opcode",0,7)],["rd","imm","rs1"],[Parameter.register,Parameter.immediate,Parameter.register],/[a-zA-Z]+\s*([A-Za-z0-9]+)\s*,\s*(-?0?[boxd]?[0-9A-F]+)\s*\(\s*([A-Za-z0-9]+)\s*\)/,"@mnem @arg, @arg(@arg)"));var ilSubtype=formats[formats.length-1];instructions.push(new Instruction("LB",ilSubtype,["opcode","funct3"],[parseInt("0000011",2),parseInt("000",2)],function(core){var bytes=core.memcpy(core.registerFile.read(core.arguments[2])+core.arguments[1],1);return null===bytes?"Illegal memory access.":(core.registerFile.write(core.arguments[0],signExt(bytes[0],8)),null)})),instructions.push(new Instruction("LH",ilSubtype,["opcode","funct3"],[parseInt("0000011",2),parseInt("001",2)],function(core){var bytes=core.memcpy(core.registerFile.read(core.arguments[2])+core.arguments[1],2);return null===bytes?"Illegal memory access.":(core.registerFile.write(core.arguments[0],signExt(catBytes(bytes),16)),null)})),instructions.push(new Instruction("LW",ilSubtype,["opcode","funct3"],[parseInt("0000011",2),parseInt("010",2)],function(core){var bytes=core.memcpy(core.registerFile.read(core.arguments[2])+core.arguments[1],4);return null===bytes?"Illegal memory access.":(core.registerFile.write(core.arguments[0],catBytes(bytes)),null)})),instructions.push(new Instruction("LBU",ilSubtype,["opcode","funct3"],[parseInt("0000011",2),parseInt("100",2)],function(core){var bytes=core.memcpy(core.registerFile.read(core.arguments[2])+core.arguments[1],1);return null===bytes?"Illegal memory access.":(core.registerFile.write(core.arguments[0],bytes[0]),null)})),instructions.push(new Instruction("LHU",ilSubtype,["opcode","funct3"],[parseInt("0000011",2),parseInt("101",2)],function(core){var bytes=core.memcpy(core.registerFile.read(core.arguments[2])+core.arguments[1],2);return null===bytes?"Illegal memory access.":(core.registerFile.write(core.arguments[0],catBytes(bytes)),null)})),formats.push(new Format([new BitRange("funct7",25,7),new BitRange("shamt",20,5,2),new BitRange("rs1",15,5,1),new BitRange("funct3",12,3),new BitRange("rd",7,5,0),new BitRange("opcode",0,7)],["rd","rs1","shamt"],[Parameter.register,Parameter.register,Parameter.immediate],/[a-zA-Z]+\s*([A-Za-z0-9]+)\s*,\s*([A-Za-z0-9]+),\s*(-?0?[boxd]?[0-9A-F]+)/,"@mnem @arg, @arg, @arg"));var isSubtype=formats[formats.length-1];instructions.push(new Instruction("SLLI",isSubtype,["opcode","funct3","funct7"],[parseInt("0010011",2),parseInt("001",2),parseInt("0000000",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])<<core.arguments[2]),null},!1)),instructions.push(new Instruction("SRLI",isSubtype,["opcode","funct3","funct7"],[parseInt("0010011",2),parseInt("101",2),parseInt("0000000",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])>>>core.arguments[2]),null},!1)),instructions.push(new Instruction("SRAI",isSubtype,["opcode","funct3","funct7"],[parseInt("0010011",2),parseInt("101",2),parseInt("0100000",2)],function(core){return core.registerFile.write(core.arguments[0],core.registerFile.read(core.arguments[1])>>core.arguments[2]),null},!1)),formats.push(new Format([new BitRange("imm[11:5]",25,7,1,null,12),new BitRange("rs2",20,5,0),new BitRange("rs1",15,5,2),new BitRange("funct3",12,3),new BitRange("imm[4:0]",7,5,1,null,12),new BitRange("opcode",0,7)],["rs2","imm","rs1"],[Parameter.register,Parameter.immediate,Parameter.register],/[a-zA-Z]+\s*([A-Za-z0-9]+)\s*,\s*(-?0?[boxd]?[0-9A-F]+)\(\s*([A-Za-z0-9]+)\s*\)/,"@mnem @arg, @arg(@arg)"));var sType=formats[formats.length-1];instructions.push(new Instruction("SB",sType,["opcode","funct3"],[parseInt("0100011",2),parseInt("000",2)],function(core){var bytes=[];return bytes.push(255&core.registerFile.read(core.arguments[0])),core.memset(core.registerFile.read(core.arguments[2])+core.arguments[1],bytes)?null:"Illegal memory access."})),instructions.push(new Instruction("SH",sType,["opcode","funct3"],[parseInt("0100011",2),parseInt("001",2)],function(core){var bytes=[],value=core.registerFile.read(core.arguments[0]);return bytes.push(255&value),value>>>=8,bytes.push(255&value),core.memset(core.registerFile.read(core.arguments[2])+core.arguments[1],bytes)?null:"Illegal memory access."})),instructions.push(new Instruction("SW",sType,["opcode","funct3"],[parseInt("0100011",2),parseInt("010",2)],function(core){var bytes=[],value=core.registerFile.read(core.arguments[0]);return bytes.push(255&value),value>>>=8,bytes.push(255&value),value>>>=8,bytes.push(255&value),value>>>=8,bytes.push(255&value),core.memset(core.registerFile.read(core.arguments[2])+core.arguments[1],bytes)?null:"Illegal memory access."})),formats.push(new Format([new BitRange("imm",12,20,1),new BitRange("rd",7,5,0),new BitRange("opcode",0,7)],["rd","imm"],[Parameter.register,Parameter.offset],/[a-zA-Z]+\s*([A-Za-z0-9]+)\s*,\s*([a-zA-Z0-9_]+)/,"@mnem @arg, @arg"));var uType=formats[formats.length-1];instructions.push(new Instruction("LUI",uType,["opcode"],[parseInt("0110111",2)],function(core){return core.registerFile.write(core.arguments[0],core.arguments[1]<<12),null})),instructions.push(new Instruction("AUIPC",uType,["opcode"],[parseInt("0010111",2)],function(core){return core.registerFile.write(core.arguments[0],(core.arguments[1]<<12)+core.pc-4),null})),formats.push(new Format([new BitRange("imm[11:5]",25,7,2,null,13),new BitRange("rs2",20,5,1),new BitRange("rs1",15,5,0),new BitRange("funct3",12,3),new BitRange("imm[4:0]",7,5,2,null,13),new BitRange("opcode",0,7)],["rs1","rs2","imm"],[Parameter.register,Parameter.register,Parameter.special],/[a-zA-Z]+\s*([A-Za-z0-9]+)\s*,\s*([A-Za-z0-9]+)\s*,\s*([a-zA-Z0-9_]+)/,"@mnem @arg, @arg, @arg",function(address,text,bits,labels,addresses){var array=text.split(""),result={errorMessage:null,value:null},int=NaN,labelLocation=labels.indexOf(text);if(-1!==labelLocation)int=addresses[labelLocation]-address+4;else{var radix=10,splice=!1;"0"===array[0]&&("b"==array[1]&&(radix=2,splice=!0),"o"==array[1]&&(radix=8,splice=!0),"d"==array[1]&&(radix=10,splice=!0),"x"==array[1]&&(radix=16,splice=!0));var interpretable=text;splice&&(interpretable=array.splice(2,array.length-2).join("")),int=parseInt(interpretable,radix)}if(isNaN(int))return result.errorMessage="Offset '"+text+"' is not a recognized label or literal.",result;if(rangeCheck(int,13)){var mangle=2046&int;return mangle|=int>>>11&1,mangle|=(int>>>12&1)<<11,result.value=mangle,result}return result.errorMessage="The value of '"+text+"' is out of range.",result},function(value){var unmangle=(1&value)<<11;return unmangle|=value>>>11<<12,unmangle|=2046&value}));var sbType=formats[formats.length-1];instructions.push(new Instruction("BEQ",sbType,["opcode","funct3"],[parseInt("1100011",2),parseInt("000",2)],function(core){return core.registerFile.read(core.arguments[0])===core.registerFile.read(core.arguments[1])&&(core.pc+=core.arguments[2],core.pc-=4),null})),instructions.push(new Instruction("BNE",sbType,["opcode","funct3"],[parseInt("1100011",2),parseInt("001",2)],function(core){return core.registerFile.read(core.arguments[0])!==core.registerFile.read(core.arguments[1])&&(core.pc+=core.arguments[2],core.pc-=4),null})),instructions.push(new Instruction("BLT",sbType,["opcode","funct3"],[parseInt("1100011",2),parseInt("100",2)],function(core){return core.registerFile.read(core.arguments[0])<core.registerFile.read(core.arguments[1])&&(core.pc+=core.arguments[2],core.pc-=4),null})),instructions.push(new Instruction("BGE",sbType,["opcode","funct3"],[parseInt("1100011",2),parseInt("101",2)],function(core){return core.registerFile.read(core.arguments[0])>=core.registerFile.read(core.arguments[1])&&(core.pc+=core.arguments[2],core.pc-=4),null})),instructions.push(new Instruction("BLTU",sbType,["opcode","funct3"],[parseInt("1100011",2),parseInt("110",2)],function(core){return core.registerFile.read(core.arguments[0])>>>0<core.registerFile.read(core.arguments[1])>>>0&&(core.pc+=core.arguments[2],core.pc-=4),null})),instructions.push(new Instruction("BGEU",sbType,["opcode","funct3"],[parseInt("1100011",2),parseInt("111",2)],function(core){return core.registerFile.read(core.arguments[0])>>>0>=core.registerFile.read(core.arguments[1])>>>0&&(core.pc+=core.arguments[2],core.pc-=4),null})),formats.push(new Format([new BitRange("imm",12,20,1,null,21),new BitRange("rd",7,5,0),new BitRange("opcode",0,7)],["rd","imm"],[Parameter.register,Parameter.special],/[a-zA-Z]+\s*([A-Za-z0-9]+)\s*,\s*([a-zA-Z0-9_]+)/,"@mnem @arg, @arg",function(address,text,bits,labels,addresses){var array=text.split(""),result={errorMessage:null,value:null},int=NaN,labelLocation=labels.indexOf(text);if(-1!==labelLocation)int=addresses[labelLocation]-address+4;else{var radix=10,splice=!1;"0"===array[0]&&("b"==array[1]&&(radix=2,splice=!0),"o"==array[1]&&(radix=8,splice=!0),"d"==array[1]&&(radix=10,splice=!0),"x"==array[1]&&(radix=16,splice=!0));var interpretable=text;splice&&(interpretable=array.splice(2,array.length-2).join("")),int=parseInt(interpretable,radix)}if(isNaN(int))return result.errorMessage="Offset '"+text+"' is not a recognized label or literal.",result;if(rangeCheck(int,21)){var mangle=int>>12&255;return mangle|=(int>>11&1)<<8,mangle|=(int>>1&1023)<<9,mangle|=(int>>20&1)<<19,result.value=mangle,result}return result.errorMessage="The value of '"+text+"' ("+int.toString()+")is out of range.",result},function(value){var unmangle=(value>>8&1)<<11;return unmangle|=(value>>>19&1)<<20,unmangle|=(value>>>0&255)<<12,unmangle|=(value>>>9&1023)<<1}));var ujType=formats[formats.length-1];instructions.push(new Instruction("JAL",ujType,["opcode"],[parseInt("1101111",2)],function(core){return core.registerFile.write(core.arguments[0],core.pc),core.pc+=core.arguments[1],core.pc-=4,null})),formats.push(new Format([new BitRange("const",0,32)],[],[],/[a-zA-Z]+/,"@mnem"));var allConstSubtype=formats[formats.length-1];instructions.push(new Instruction("ECALL",allConstSubtype,["const"],[parseInt("00000000000000000000000001110011",2)],function(core){return core.ecall(),null})),formats.push(new Format([new BitRange("funct7",25,7),new BitRange("rs2",20,5,1),new BitRange("rs1",15,5),new BitRange("funct3",12,3),new BitRange("rd",7,5,0),new BitRange("opcode",0,7)],["rd","rs2"],[Parameter.register,Parameter.register],/[a-zA-Z]+\s*([A-Za-z0-9]+)\s*,\s*([A-Za-z0-9]+)/,"@mnem @arg, @arg"));var mvPseudo=formats[formats.length-1];instructions.push(new Instruction("MV",mvPseudo,["opcode","funct3","rs1","funct7"],[parseInt("0110011",2),parseInt("000",2),parseInt("00000"),parseInt("0000000",2)],function(core){return null})),formats.push(new Format([new BitRange("imm",20,12,1),new BitRange("rs1",15,5),new BitRange("funct3",12,3),new BitRange("rd",7,5,0),new BitRange("opcode",0,7)],["rd","imm"],[Parameter.register,Parameter.immediate],/[a-zA-Z]+\s*([A-Za-z0-9]+)\s*,\s*(-?[a-zA-Z0-9_]+)/,"@mnem @arg, @arg"));var liPseudo=formats[formats.length-1];instructions.push(new Instruction("LI",liPseudo,["opcode","funct3","rs1"],[parseInt("0010011",2),parseInt("000",2),parseInt("00000",2)],function(core){return null})),instructions.push(new Instruction("LA",liPseudo,["opcode","funct3","rs1"],[parseInt("0010011",2),parseInt("000",2),parseInt("00000",2)],function(core){return null})),formats.push(new Format([new BitRange("imm",20,12),new BitRange("rs1",15,5,0),new BitRange("funct3",12,3),new BitRange("rd",7,5),new BitRange("opcode",0,7)],["rs1"],[Parameter.register],/[a-zA-Z]+\s*([A-Za-z0-9]+)/,"@mnem @arg"));var jrPseudo=formats[formats.length-1];instructions.push(new Instruction("JR",jrPseudo,["opcode","rd","funct3","imm"],[parseInt("1100111",2),parseInt("00000",2),parseInt("000",2),parseInt("000000000000",2)],function(core){return null})),instructions.push(new Instruction("SCALL",allConstSubtype,["const"],[parseInt("00000000000000000000000001110011",2)],function(core){return null})),instructions.push(new Instruction("SYSCALL",allConstSubtype,["const"],[parseInt("00000000000000000000000001110011",2)],function(core){return null}));return new InstructionSet("rv32i",32,formats,instructions,[],[".word",".half",".byte",".string"],[4,2,1,0],["zero","ra","sp","gp","tp","t0","t1","t2","s0","s1","a0","a1","a2","a3","a4","a5","a6","a7","s2","s3","s4","s5","s6","s7","s8","s9","s10","s11","t3","t4","t5","t6"],function(address,text,type,bits,labels,addresses){var array=text.split(""),result={errorMessage:null,value:null};switch(type){case Parameter.register:var registerNo=parseInt(text);if(isNaN(registerNo)){var index=this.abiNames.indexOf(text);if(-1!==index)return result.value=index,result}return"x"!==array[0]?result.errorMessage="Register "+text+" does not exist.":0<=(registerNo=parseInt(array.splice(1,array.length-1).join("")))&&registerNo<=31?result.value=registerNo:result.errorMessage="Register "+text+" does not exist.",result;case Parameter.immediate:var int=NaN,labelIndex=labels.indexOf(text);if(-1!==labelIndex)int=addresses[labelIndex];else if(3===array.length&&"'"==array[0]&&"'"==array[2])int=array[1].charCodeAt(0);else{var radix=10,splice=!1;"0"===array[0]&&("b"==array[1]&&(radix=2,splice=!0),"o"==array[1]&&(radix=8,splice=!0),"d"==array[1]&&(radix=10,splice=!0),"x"==array[1]&&(radix=16,splice=!0));var interpretable=text;splice&&(interpretable=array.splice(2,array.length-2).join("")),int=parseInt(interpretable,radix)}return isNaN(int)?result.errorMessage="Immediate '"+text+"' is not a recognized label, literal or character.":(console.log(text,int,bits),rangeCheck(int,bits)?result.value=int:result.errorMessage="The value of '"+text+"' is out of range."),result;case Parameter.offset:int=NaN;var labelLocation=labels.indexOf(text);return-1!==labelLocation?int=addresses[labelLocation]-address+4:(splice=!(radix=10),"0"===array[0]&&("b"==array[1]&&(radix=2,splice=!0),"o"==array[1]&&(radix=8,splice=!0),"d"==array[1]&&(radix=10,splice=!0),"x"==array[1]&&(radix=16,splice=!0)),interpretable=text,splice&&(interpretable=array.splice(2,array.length-2).join("")),int=parseInt(interpretable,radix)),isNaN(int)?result.errorMessage="Offset '"+text+"' is not a recognized label or literal.":rangeCheck(int,bits)?result.value=int:result.errorMessage="The value of '"+text+"' is out of range.",result;default:return result}},function(file){for(var result={errorMessage:null,labels:[],addresses:[],lines:[],pc:[]},address=0,text=!0,lines=file.split("\n"),i=0;i<lines.length;i++){var labelExtractor=/\s*(([A-Za-z_][A-Za-z0-9_]*):)?(.*)?/.exec(lines[i]);if(null==labelExtractor&&console.log("Congratulations, you broke regular expressions."),void 0!==labelExtractor[2]&&(result.labels.push(labelExtractor[2]),result.addresses.push(address)),lines[i]=labelExtractor[3],null!=lines[i]){for(var chars=lines[i].split(""),inString=!1,commentOut=!1,j=0;j<chars.length;j++)if(commentOut)"\n"!==chars[j]?(chars.splice(j,1),j--):commentOut=!1;else if('"'==chars[j]||"'"==chars[j])inString=!inString;else if(inString){if("\\"==chars[j])j++;else if("\n"==chars[j])return result.errorMessage="Line "+i+": Unterminated string.",result}else"#"==chars[j]&&(commentOut=!0,chars.splice(j,1),j--);lines[i]=chars.join(""),lines[i]=lines[i].split("' '").join("32");var directives=lines[i].split(/\s+/).filter(function(value){return 0<value.length});if(0!==directives.length){var directiveChars=directives[0].split("");if(text)if(".data"===directives[0]){if(text=!1,void 0!==directives[1])return result.errorMessage="Line "+i+": "+directives[1]+" is extraneous. .data does not take any arguments.",result}else if(".text"===directives[0]);else{if("."===directiveChars[0])return result.errorMessage="Line "+i+": "+directives[0]+" cannot be in the text section. Aborting.",result;if(-1===this.mnemonicSearch(directives[0].toUpperCase())){var pseudoInstructionIndex=this.pseudoMnemonicSearch(directives[0].toUpperCase());if(-1===pseudoInstructionIndex)return result.errorMessage="Line "+i+": Instruction "+directives[0]+" not found.",result;address+=4*this.pseudoInstructions[pseudoInstructionIndex].expansion.length}else address+=4}else if(".text"==directives[0]){if(text=!0,void 0!==directives[1])return result.errorMessage="Line "+i+": "+directives[1]+" is extraneous. .text does not take any arguments.",result}else if(".data"===directives[0]);else{if(-1===this.dataDirectives.indexOf(directives[0]))return"."===directiveChars[0]?result.errorMessage="Line "+i+": Unsupported directive "+directives[0]+".":result.errorMessage="Line "+i+": Unrecognized keyword "+directives[0]+".",result;var index=this.dataDirectives.indexOf(directives[0]);if(0!==this.dataDirectiveSizes[index])address+=(array=directives.join(" ").split(directives[i]).join("").split(",")).length*this.dataDirectiveSizes[index];else switch(directives[0]){case".string":var match=/.string\s*\"(.*)\"\s*(#.*)?$/.exec(lines[i]);if(null==match)return result.errorMessage="Line "+i+": Malformed string directive.",result;var array=match[1].split("");for(j=0;j<array.length;j++)"\\"==array[j]&&j++,address+=1;address+=1}}result.pc.push(address)}}}return result.lines=lines,result},function(nester,address,lines,labels,addresses){void 0===nester&&(nester=null);for(var result={errorMessage:null,machineCode:[],size:0},text=!0,i=0;i<lines.length;i++)if(void 0!==lines[i]){var directives=lines[i].split(/\s+/).filter(function(value){return 0<value.length});if(0!==directives.length)if(text)if(".data"===directives[0])text=!1;else if(".text"===directives[0]);else{address+=4;var instructionIndex=this.mnemonicSearch(directives[0].toUpperCase());if(-1===instructionIndex)return result.errorMessage="Line "+(null==nester?"":nester+":")+i+": Instruction "+directives[0]+" not found.",result;var instruction=this.instructions[instructionIndex],format=instruction.format,bitRanges=format.ranges,regex=format.regex,params=format.parameters,paramTypes=format.parameterTypes,machineCode=instruction.template(),match=regex.exec(lines[i]);if(null==match)return result.errorMessage="Line "+(null==nester?"":nester+":")+i+": Argument format for "+directives[0]+" violated.",result;for(var args=match.splice(1,params.length),j=0;j<bitRanges.length;j++)if(null!=bitRanges[j].parameter){var startBit=0,bits=bitRanges[j].bits,field=bitRanges[j].field,limits=/([A-za-z]+)\s*\[\s*(\d+)\s*:\s*(\d+)\s*\]/.exec(bitRanges[j].field);null!=limits&&(field=limits[1],bits=bitRanges[j].limitlessBits);var register=0;if(paramTypes[index=format.fieldParameterIndex(field)]!==Parameter.special){var processed_1=this.processParameter(address,args[index],paramTypes[index],bits,labels,addresses);if(null!==processed_1.errorMessage)return result.errorMessage="Line "+(null==nester?"":nester+":")+i+": "+processed_1.errorMessage,result;register=processed_1.value}else{var processed_2=instruction.format.processSpecialParameter(address,args[index],bits,labels,addresses);if(null!==processed_2.errorMessage)return result.errorMessage="Line "+(null==nester?"":nester+":")+i+": "+processed_2.errorMessage,result;register=processed_2.value}null!=limits&&(register>>>=startBit=parseInt(limits[3]),register&=(1<<parseInt(limits[2])-startBit+1)-1),machineCode|=register<<bitRanges[j].start}for(j=0;j<4;j++)result.machineCode.push(255&machineCode),machineCode>>>=8}else if(".text"==directives[0])text=!0;else if(-1!==this.dataDirectives.indexOf(directives[0])){var index=this.dataDirectives.indexOf(directives[0]);if(0!==this.dataDirectiveSizes[index]){var size=this.dataDirectiveSizes[index],array=lines[i].split("' '").join("'$OAK_SPACE_TEMP'").split(directives[0]).join("").split(" ").join("").split("'$OAK_SPACE_TEMP'").join("' '").split(",");for(j=0;j<array.length;j++){var processed=this.processParameter(address,array[j],Parameter.immediate,8*size,labels,addresses);if(null!==processed.errorMessage)return result.errorMessage="Line "+(null==nester?"":nester+":")+i+": "+processed.errorMessage,result;for(var k=0;k<size;k++)address+=1,result.machineCode.push(255&processed.value),processed.value=processed.value>>>8}}else switch(directives[0]){case".string":var stringMatch=/.string\s*\"(.*)\"\s*(#.*)?$/.exec(lines[i]);if(null==stringMatch)return result.errorMessage="Line "+i+": Malformed string directive.",result;null==stringMatch[1]&&(stringMatch[1]="");var characters=stringMatch[1].split("");for(j=0;j<characters.length;j++){if("\\"==characters[j]){if(++j+1<characters.length)switch(characters[j+1]){case"n":result.machineCode.push(10);break;case"0":result.machineCode.push(0);break;case"'":result.machineCode.push(39);break;case"\\":result.machineCode.push(92);break;default:result.machineCode.push(characters[j].charCodeAt(0))}}else result.machineCode.push(characters[j].charCodeAt(0));address+=1}result.machineCode.push(0),address+=1}}}return result.size=address,result})}var RISCV=Oak_gen_RISCV(),RISCVRegisterFile=function(){function RISCVRegisterFile(memorySize,abiNames){this.physicalFile=[],this.modifiedRegisters=[];for(var i=0;i<32;i++)this.physicalFile.push(0),this.modifiedRegisters.push(!1);this.memorySize=memorySize,this.physicalFile[2]=memorySize,this.abiNames=abiNames}return RISCVRegisterFile.prototype.print=function(){console.log("Registers\n------");for(var i=0;i<32;i++)console.log("x"+i.toString(),this.abiNames[i],this.physicalFile[i].toString(),(this.physicalFile[i]>>>0).toString(16).toUpperCase());console.log("------")},RISCVRegisterFile.prototype.read=function(registerNumber){return 0===registerNumber?0:this.physicalFile[registerNumber]},RISCVRegisterFile.prototype.write=function(registerNumber,value){this.physicalFile[registerNumber]=value,this.modifiedRegisters[registerNumber]=!0},RISCVRegisterFile.prototype.getRegisterCount=function(){return 32},RISCVRegisterFile.prototype.getModifiedRegisters=function(){for(var modReg=this.modifiedRegisters.slice(),i=0;i<this.getRegisterCount();i++)this.modifiedRegisters[i]=!1;return modReg},RISCVRegisterFile.prototype.reset=function(){for(var i=0;i<32;i++)this.physicalFile[i]=0,this.modifiedRegisters[i]=!1;this.physicalFile[2]=this.memorySize},RISCVRegisterFile}(),RISCVCore=function(){function RISCVCore(memorySize,ecall,instructionCallback){this.defaultEcallRegType=10,this.defaultEcallRegArg=11,this.aceStyle="ace/mode/riscv",this.defaultCode='    la a1, str\n    li a0, 4 #4 is the string print service number...\n    ecall\n    li a0, 10 #...and 10 is the program termination service number!\n    ecall\n.data\nstr:    .string "Hello, World!"',this.defaultMachineCode="13 05 40 01 93 08 40 00 73 00 00 00 93 08 A0 00 73 00 00 00 48 65 6C 6C 6F 2C 20 57 6F 72 6C 64 21 00 ",this.instructionSet=RISCV,this.pc=0,this.memorySize=memorySize,this.ecall=ecall,this.instructionCallback=instructionCallback,this.registerFile=new RISCVRegisterFile(memorySize,RISCV.abiNames),this.memory=new Array(memorySize);for(var i=0;i<memorySize;i++)this.memory[i]=0}return RISCVCore.prototype.reset=function(){this.pc=0,this.memory=[];for(var i=0;i<this.memorySize;i++)this.memory[i]=0;this.registerFile.reset()},RISCVCore.prototype.memcpy=function(address,bytes){if(address+bytes>this.memorySize)return null;for(var result=[],i=0;i<bytes;i++)result.push(this.memory[address+i]);return result},RISCVCore.prototype.memset=function(address,bytes){if(address<0)return!1;if(address+bytes.length>this.memorySize)return!1;for(var i=0;i<bytes.length;i++)this.memory[address+i]=bytes[i];return!0},RISCVCore.prototype.fetch=function(){if(this.pc<0)return"Fetch Error: Negative program counter.";var arr=this.memcpy(this.pc,4);return null==arr?"Fetch Error: Illegal memory access.":(this.pc+=4,this.fetched=catBytes(arr),null)},RISCVCore.prototype.decode=function(){var insts=this.instructionSet.instructions;this.decoded=null,this.arguments=[];for(var i=0;i<insts.length;i++)if(insts[i].match(this.fetched)){this.decoded=insts[i];break}if(null==this.decoded)return null;var format=this.decoded.format,bitRanges=format.ranges,params=format.parameters,paramTypes=format.parameterTypes;for(i=0;i<bitRanges.length;i++)if(null!=bitRanges[i].parameter){var limit=0,field=bitRanges[i].field,limits=/([A-za-z]+)\s*\[\s*(\d+)\s*:\s*(\d+)\s*\]/.exec(bitRanges[i].field);null!=limits&&(field=limits[1],limit=parseInt(limits[3])>>>0);var index=format.fieldParameterIndex(field),bits=bitRanges[i].bits,value=(this.fetched>>>bitRanges[i].start&(1<<bitRanges[i].bits)-1)<<limit;paramTypes[index]===Parameter.special&&(value=this.decoded.format.decodeSpecialParameter(value,this.pc)),this.arguments[index]=this.arguments[index]|value}for(i=0;i<params.length;i++){var rangeIndex=format.parameterBitRangeIndex(params[i]);-1===rangeIndex&&console.log("Internal error: No field found for parameter "+params[i]+".");bits=bitRanges[rangeIndex].bits;null!=bitRanges[rangeIndex].limitlessBits&&(bits=bitRanges[rangeIndex].limitlessBits),this.decoded.signed&&paramTypes[i]!=Parameter.register&&(this.arguments[i]=signExt(this.arguments[i],bits))}return format.disassemble(this.decoded.mnemonic,this.arguments,this.instructionSet.abiNames)},RISCVCore.prototype.execute=function(){return this.decoded.executor(this)},RISCVCore}();function rangeCheck(value,bits){if(32==bits)return!0;if(32<bits)return!1;var min=-(1<<bits-1),max=(1<<bits-1)-1;return(value=signExt(value,bits))>>0<=max&&min<=value>>0}function signExt(value,bits){var mutableValue=value;return 0!=(mutableValue&1<<bits-1)&&(mutableValue=-1>>>bits<<bits|value),mutableValue}function catBytes(bytes){if(4<bytes.length)return null;for(var storage=0,i=0;i<bytes.length;i++)storage|=bytes[i]<<8*i;return storage}var debug=!1,consoleTests=!1;function h2b(hex){for(var hexArr=hex.split(" "),byteArr=[],i=0;i<hexArr.length;i++){var value=parseInt(hexArr[i],16);isNaN(value)||byteArr.push(value)}return byteArr}function assemble(core,data){var token=core.instructionSet.tokenize(data);return debug&&(console.log(token.labels),console.log(token.addresses)),null===token.errorMessage?core.instructionSet.assemble(null,0,token.lines,token.labels,token.addresses):{errorMessage:token.errorMessage,machineCode:null,size:0}}function loadIntoMemory(core,data){return null===core.memset(0,data)?"Program is too large.":null}function loadMemStep(core,data){var load=loadIntoMemory(core,data);if(null!==load)return load;simulateStep(core)}function simulateStep(core){var fetch=core.fetch();if(null!==fetch)return fetch;var decode=core.decode();if(null===decode)return"Address 0x"+(core.pc-4).toString(16).toUpperCase()+": Instruction unrecognized or unsupported.";core.instructionCallback(decode),debug&&console.log(core.pc-4,decode,core.arguments);var execute=core.execute();return null!==execute?execute:"ECALL"==decode||"SYSCALL"==decode?"@Oak_Ecall":null}function simulate(core,data){var load=loadIntoMemory(core,data);return null!==load?load:continueSim(core)}function continueSim(core){var step=simulateStep(core),i=0;for(i=0;i<16384&&null===step;i++)step=simulateStep(core);return 16384==i?"ERROR: Possible Infinite Loop":null!==step?step:null}function registerRead(core,index){return core.registerFile.read(index)}function registerWrite(core,index,value){core.registerFile.write(index,value)}function getMemory(core){return core.memory}function getRegisterABINames(core){return core.registerFile.abiNames}function resetCore(core){core.reset()}Array.prototype.Oak_hex=function(){for(var hexadecimal="",i=0;i<this.length;i++){var hexRepresentation=this[i].toString(16).toUpperCase();1===hexRepresentation.length&&(hexRepresentation="0"+hexRepresentation),hexadecimal+=hexRepresentation+" "}return hexadecimal};var ecalloutput="";function Oak_terminal_eCall(){var type=registerRead(this,17),arg=registerRead(this,10),exit=!1;switch(type){case 1:ecalloutput+=arg+"\n";break;case 4:for(var pointer=arg,output="",char=this.memory[pointer];0!=char;)output+=String.fromCharCode(char),pointer+=1,char=this.memory[pointer];ecalloutput+=output+"\n";break;case 5:registerWrite(this,17,4);break;case 10:exit=!0;break;default:console.log("Unsupported environment call.")}exit?console.log("Simulation Complete."):"@Oak_Ecall"!=(output=continueSim(this))&&null!==output&&null!=output&&console.log("ERROR: "+output)}if(consoleTests){console.log("Oak.js Console Tests");for(var testCore=new RISCVCore(2048,Oak_terminal_eCall,function(data){}),oakHex=assemble(testCore,"main:\naddi a0, zero, 8\naddi a1, zero, 2\njal ra, mydiv\n\nli a7, 10  # calls exit command (code 10)\nSCALL # end of program\n\n## Divides two numbers, storing integer result on t0 and rest on t1\n# a0 Number we will divide\n# a1 Number we will divide for\nmydiv:\nadd t1, zero, zero # i = 0\n\nmydiv_test:\nslt t0, a0, a1 # if ( a < b )\nbne t0, zero, mydiv_end # then get out of here\nsub a0, a0, a1 # else, a = a - b\naddi t1, t1, 1 # and i = i + 1\njal x0, mydiv_test # let's test again\n\nmydiv_end:\nadd a1, zero, a0 # rest = a\nadd a0, zero, t1 # result = i\njalr x0, ra, 0").machineCode,gnuHex=h2b("13 05 80 00 93 05 20 00 EF 00 C0 00 93 08 A0 00 73 00 00 00 33 03 00 00 B3 22 B5 00 63 98 02 00 33 05 B5 40 13 03 13 00 6F F0 1F FF B3 05 A0 00 33 05 60 00 67 80 00 00"),i=0;i<oakHex.length;i++)if(oakHex[i]!==gnuHex[i]){console.log("Binaries do not match.");break}var sim=simulate(testCore,oakHex);ecalloutput="",console.log(ecalloutput),ecalloutput=""}
